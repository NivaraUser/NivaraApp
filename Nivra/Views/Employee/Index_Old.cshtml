@model List<Nivara.Models.EmployeeModel>
@using Nivara.Common.Helpers
@{ ViewBag.Title = "Employees";}

<style>
    table.dataTable tbody > tr.selected, table.dataTable tbody > tr > .selected {
        background-color: white;
        color: #6c757d;
    }
</style>
<!-- Start Content-->
<div class="container-fluid">
    <!-- start page title -->
    <div class="row">
        <div class="col-12">
            <div class="page-title-box">
                <h4 class="page-title">@ViewBag.Title</h4>
            </div>
        </div>
    </div>
    <!-- end page title -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <div class="row mb-2">
                        <div class="col-sm-4">
                            <a href="@Url.Action("Manage","Employee")" class="btn btn-danger mb-2"><i class="mdi mdi-plus-circle me-2"></i> Add Employee</a>
                        </div>
                        <div class="col-sm-8">
                            <div class="text-sm-end" style="float:right; display:none;">
                                <button type="button" class="btn btn-success mb-2 me-1"><i class="mdi mdi-cog-outline"></i></button>
                                <button type="button" class="btn btn-light mb-2 ">Export</button>
                            </div>
                        </div>
                    </div>

                    <div class="table-responsive">
                        @*<table class="table table-centered w-100 dt-responsive nowrap" id="products-datatable">*@
                            <table class="table table-bordered table-striped" id="tblEmployee">
                               <thead class="table-light">
                                    <tr>
                                        <th>
                                            Name
                                        </th>
                                        <th>
                                            Email
                                        </th>
                                        <th>
                                            Contact Number
                                        </th>
                                        <th>
                                            Country
                                        </th>
                                        <th>
                                            State
                                        </th>
                                        <th>
                                            City
                                        </th>
                                        <th style="width: 85px;">Action</th>
                                    </tr>
                                </thead>
                                @*<tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>

                                            <td>
                                                @if (!string.IsNullOrEmpty(item.ProfilePicture))
                                                {
                                                    <img src="~/images/@item.ProfilePicture" alt="contact-img" title="contact-img" class="rounded me-3" height="48" />
                                                }
                                                <p class="m-0 d-inline-block align-middle font-16">
                                                    <a href="apps-ecommerce-products-details.html" class="text-body"> @item.UserName</a>
                                                </p>

                                            </td>
                                            <td>
                                                @item.Email
                                            </td>
                                            <td>
                                                @item.ContactNumber
                                            </td>
                                            <td>
                                                @item.CountryName
                                            </td>
                                            <td>
                                                @item.StateName
                                            </td>
                                            <td>
                                                @item.CityName
                                            </td>
                                            <td class="table-action">
                                                <a href="@Url.Action("Manage","Employee",new { @id=""+SecurityHelper.Encrypt(item.Id.ToString())+""})" class="action-icon"> <i class="mdi mdi-square-edit-outline"></i></a>
                                                <a href="javascript:void(0);" onclick="DeleteEmployee(@item.Id)" class="action-icon"> <i class="mdi mdi-delete"></i></a>
                                                <a href="javascript:void(0);" onclick="ResetEmployeePassword(`@item.Id`, `@item.Email`)" class="action-icon"> Reset</a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>*@
                            </table>
</div>


                </div> <!-- end card-body-->
            </div> <!-- end card-->
        </div> <!-- end col -->
    </div>
</div>

<script src="~/js/jquery.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $('#tblEmployee').DataTable().destroy();
        $("#tblEmployee").DataTable(
                {
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                         url: "@Url.Action("Employee_Read", "Employee")",
                        "type": "POST",
                        "datatype": "json"
                    },
                    "columnDefs": [{
                        "targets": [0],
                        "visible": false,
                        "searchable": false

                    }],

                    columns: [
                        {
                            'data': 'Name',
                            "width": "20%",
                            'render': function (data, type, row) { return row.userName }
                        },
                        {
                        'data': 'Email',
                        "width": "20%",
                        'render': function (data, type, row)
                        {
                            var url = '@Url.Action("Manage", "Employee")?id=' + row.id;
                            return '<a href="' + url+'" .traget="_blank" data-title="view form">' + row.email + '</a>';
                        }
                    },
                        {
                            'data': 'ContactNumber',
                            "width": "20%",
                            'render': function (data, type, row) { return row.contactNumber }
                        },
                    {
                        'data': 'CountryName',
                        'width': '10%',
                        'class': 'centerText',
                        'render': function (data, type, row) { return row.countryName }
                        },
                        {
                            'data': 'StateName',
                            'width': '10%',
                            'class': 'centerText',
                            'render': function (data, type, row) { return row.stateName }
                        },
                        {
                            'data': 'CityName',
                            'width': '10%',
                            'class': 'centerText',
                            'render': function (data, type, row) { return row.cityName }
                        },
                    {
                        'data': 'Action',
                        'width': '20%',
                        'class': 'centerText',
                        'render': function (data, type, row) {
                            var str = '<button type = "button" class="btn btn-danger" onclick="DeleteEmployee(' + row.Id + ')">Delete</button>&nbsp';

                            @*<a href="@Url.Action("Manage","Employee",new { @id=""+SecurityHelper.Encrypt(" + row+" .Id.ToString())+""})" class="action-icon"> <i class="mdi mdi-square-edit-outline"></i></a>
                            ' <a href="javascript:void(0);" onclick="ResetEmployeePassword(' + row.id + '     ` @row.Id`, `@item.Email`)" class="action-icon"> Reset</a>'


                               str += '<button type = "button" class="btn btn-info" onclick="OnResetPassword(' + row.userId + ')">ResetPassword</button>&nbsp';*/*@
                            //str = str + (row.IsActive == true ? '<button type="button" class="btn btn-success"  onclick="OnDisableUser(' + row.Id + ')">Disable</button>' : '<button type="button" class="btn btn-success"  onclick ="OnActiveUser(' + row.Id + ')">Active</button>');
                            return str;
                        }
                    }
                    ]
                });

        $('.dataTables_filter input').unbind().keyup(function (e) {
            var value = $(this).val();
            if (value.length > 3) {
                alert(value);
                table.search(value).draw();
            } else {
                //optional, reset the search if the phrase 
                //is less then 3 characters long
                table.search('').draw();
            }
        });

            //AjexDataTable();
        });
    function OnSuccess(response) {
            $('#tblEmployee').DataTable().destroy();
            $("#tblEmployee").DataTable(
                {
                    "processing": true,
                    "serverSide": true,
                    "filter": true,
                    "ajax": {
                         url: "@Url.Action("Employee_Read", "Employee")",
                        "type": "POST",
                        "datatype": "json"
                    },
                    "columnDefs": [{
                        "targets": [0],
                        "visible": false,
                        "searchable": false
                    }],

                    columns: [
                        {
                            'data': 'UserName',
                            "width": "20%",
                            'render': function (data, type, row) { return row.userName }
                        },
                        {
                        'data': 'Email',
                        "width": "20%",
                        'render': function (data, type, row)
                        {
                            var url = '@Url.Action("Manage", "Employee")?id=' + row.id;
                            return '<a href="' + url+'" .traget="_blank" data-title="view form">' + row.email + '</a>';
                        }
                    },
                        {
                            'data': 'ContactNumber',
                            "width": "20%",
                            'render': function (data, type, row) { return row.contactNumber }
                        },
                    {
                        'data': 'CountryName',
                        'width': '10%',
                        'class': 'centerText',
                        'render': function (data, type, row) { return row.countryName }
                        },
                        {
                            'data': 'StateName',
                            'width': '10%',
                            'class': 'centerText',
                            'render': function (data, type, row) { return row.stateName }
                        },
                        {
                            'data': 'CityName',
                            'width': '10%',
                            'class': 'centerText',
                            'render': function (data, type, row) { return row.cityName }
                        },
                    {
                        'data': 'Action',
                        'width': '20%',
                        'class': 'centerText',
                        'render': function (data, type, row) {
                            var str = '<button type = "button" class="btn btn-danger" onclick="DeleteEmployee(' + row.Id + ')">Delete</button>&nbsp';
                                /*str += '<button type = "button" class="btn btn-info" onclick="OnResetPassword(' + row.userId + ')">ResetPassword</button>&nbsp';*/
                            //str = str + (row.IsActive == true ? '<button type="button" class="btn btn-success"  onclick="OnDisableUser(' + row.Id + ')">Disable</button>' : '<button type="button" class="btn btn-success"  onclick ="OnActiveUser(' + row.Id + ')">Active</button>');
                            return str;
                        }
                    }
                    ]
                });
        }
    function AjexDataTable() {
            $.ajax({
                type: "Get",
                url: "@Url.Action("Employee_Read", "Employee")",
                data: '{}',
                contentType: "application/x-www-form-urlencoded",
                dataType: "json",
                success: OnSuccess,
                serverSide: true,
                failure: function (response) {
                    console.log(response);
                   // toastr.error(response.Message);
                },
                error: function (response) {
                    toastr.error(response.Message);
                }
            });
        }


    $("#addEmployee").click(function () {
        $(".nivaraLoader").show();
    })
    $(".editEmp").click(function () {
        $(".nivaraLoader").show();
    })

    function DeleteEmployee(id) {
        swal({
            title: "Are you sure?",
            text: "Once deleted, you will not be able to recover this record!",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $(".nivaraLoader").show();
             $.ajax({
                 url: '@Url.Action("Delete", "Employee")',
                 data: { id: id },
                datatype: "json",
                type: "get",
                contenttype: 'application/json',
                async: true,
                 success: function (data) {
                     $(".nivaraLoader").hide();
                     if (data.result)
                         window.location = data.url;
                     else
                         swal("Something went wrong!");
                },
                 error: function (res) {
                     $(".nivaraLoader").hide();
                     swal("Something went wrong!");
                }
            });

                }
                //else {
                //    swal("Your imaginary file is safe!");
                //}
            });
    }

    function ResetEmployeePassword(id, email) {
        swal({
            title: "Are you sure?",
            text: "You want to reset password",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $(".nivaraLoader").show();
             $.ajax({
                 url: '@Url.Action("ResetEmployeePassword", "Employee")',
                 data: { id: id , email : email },
                datatype: "json",
                type: "get",
                contenttype: 'application/json',
                async: true,
                 success: function (data) {
                     $(".nivaraLoader").hide();
                     if (data.result)
                         window.location = data.url;
                     else
                         swal("Something went wrong!");
                },
                 error: function (res) {
                     $(".nivaraLoader").hide();
                     swal("Something went wrong!");
                }
            });

                }
                //else {
                //    swal("Your imaginary file is safe!");
                //}
            });
    }
</script>

